pipeline {
    agent any
    
    environment {
        CLUSTER_NAME = 'python-cluster'
        REGION = 'us-east-1'
        NAMESPACE = 'hello-app'
        PATH = "/var/jenkins_home/.local/bin:$PATH"
        AWS_CLI_DIR = "/var/jenkins_home/.local/aws-cli/v2/current/bin"
    }
    
    stages {
        stage('Verify Tools') {
            steps {
                sh '''
                    # Verify AWS CLI
                    echo "AWS CLI version:"
                    $AWS_CLI_DIR/aws --version || echo "AWS CLI not found in $AWS_CLI_DIR"

                    # Install kubectl if not present
                    if ! command -v kubectl &> /dev/null; then
                        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
                        chmod +x kubectl
                        mv kubectl /var/jenkins_home/.local/bin/
                    fi
                    echo "kubectl version:"
                    kubectl version --client

                    # Install eksctl if not present
                    if ! command -v eksctl &> /dev/null; then
                        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
                        mv /tmp/eksctl /var/jenkins_home/.local/bin/
                    fi
                    echo "eksctl version:"
                    eksctl version

                    # Print PATH for debugging
                    echo "Current PATH: $PATH"
                '''
            }
        }

        stage('Verify AWS Credentials') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: "awscredss",
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh '''
                        echo "Verifying AWS credentials..."
                        echo "AWS_ACCESS_KEY_ID is set: ${AWS_ACCESS_KEY_ID:+true}"
                        echo "AWS_SECRET_ACCESS_KEY is set: ${AWS_SECRET_ACCESS_KEY:+true}"
                        $AWS_CLI_DIR/aws sts get-caller-identity
                        if [ $? -eq 0 ]; then
                            echo "AWS credentials are valid and working."
                        else
                            echo "Failed to verify AWS credentials."
                            exit 1
                        fi
                    '''
                }
            }
        }

        // ... (rest of the stages remain the same, but use $AWS_CLI_DIR/aws for AWS CLI calls)
    }
}
